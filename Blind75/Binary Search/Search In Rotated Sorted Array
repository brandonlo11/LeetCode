class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left = 0;
        int right = nums.size() - 1;
        while (left < right){
            int mid = left + (right-left)/2;
            if ((nums[mid] > target) && (nums[left] < target)){
                right = mid - 1;
            } else if (((nums[mid] < target) && (nums[left] < target)) && (nums[mid]<nums[left])){
                right = mid - 1;
            } else if (((nums[mid] > target) && (nums[left] > target)) && (nums[left] > nums[mid])){
                right = mid - 1;
            }else {
                if (nums[left]== target){
                    return left;
                }
                left = mid + 1;
            }
            if (nums[mid]== target){
                return mid;
            }
        }
        if (nums[left] != target){
            return -1;
        } else {
            return left;
        }
    }
};

//Runtime 3ms Beats 79.33%of users with C++
//Memory 10.98mb Beats 91.51%of users with C++
