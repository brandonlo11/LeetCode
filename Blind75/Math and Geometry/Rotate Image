class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int left = 0;
        int top = 0;
        int right = matrix.size() - 1;
        int bottom = matrix.size() - 1;
        while (left<right){
            for (int i = 0; i < right-left; i++){
                int topLeft = matrix[top][left+i];
                matrix[top][left+i] = matrix[bottom-i][left];
                matrix[bottom-i][left] = matrix[bottom][right-i];
                matrix[bottom][right-i] = matrix[top+i][right];
                matrix[top+i][right] = topLeft;
            }
            right--;
            bottom--;
            left++;
            top++;
        }
    }
};

//Runtime 4ms Beats 33.38% of users with C++
//Memory 7.10mb Beats 46.06% of users with C++
