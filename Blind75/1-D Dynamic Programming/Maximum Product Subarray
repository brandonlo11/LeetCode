class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int curmax = 1;
        int curmin = 1;
        int res = -100000;
        for (int j = 0; j < nums.size(); j++){
            if (nums[j] > res){
                res = nums[j];
            }
        }
        for (int i = 0; i < nums.size(); i++){
            if (nums[i] == 0){
                curmax = 1;
                curmin = 1;
                continue;
            }
            int temp = curmax*nums[i];
            curmax = (max(curmin * nums[i], curmax * nums[i]));
            curmax = max(curmax, nums[i]);
            curmin = (min(temp, curmin * nums[i]));
            curmin = min(curmin, nums[i]);
            res = max(res, curmax);
        }
        return res;
    }
};

//Runtime 0ms Beats 100.00% of users with C++
//Memory 13.8MB Beats 63.77% of users with C++
