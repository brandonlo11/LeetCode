class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        int dp[amount + 1];
        for (int i = 1; i < amount + 1; i++){
            dp[i] = amount + 1;
        }
        dp[0] = 0;
        for (int i = 0; i < amount+1; i++){
            for (int j = 0; j < coins.size(); j++){
                if ((i-coins[j]) >= 0){
                    dp[i] = (min(dp[i], 1 + dp[i-coins[j]]));
                }
            }
        }
        if (dp[amount] != amount + 1){
            return dp[amount];
        } else {
            return -1;
        }
    }
};

//Runtime 52ms Beats 94.23% of users with C++
//Memory 10.01MB Beats 96.93% of users with C++
