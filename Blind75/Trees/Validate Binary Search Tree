/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValid(TreeNode* node, long long left, long long right){
            if (node == NULL){
                return true;
            }
            if (!((node->val > left) && (node->val < right))){
                return false;
            }
            return (isValid(node->left, left, node->val) && isValid(node->right, node->val, right));
        }
    bool isValidBST(TreeNode* root) {
        long long int min = -1000000000000, max = 1000000000000;
        return isValid(root, min , max);
    }
};

//Runtime 10ms Beats 74.22% of users with C++
//Memory 21.72mb Beats 29.37% of users with C++
