class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
         vector<vector<int>> answer;
         int left = newInterval[0];
         int right = newInterval[1];
         for (int i = 0; i < intervals.size(); i++){
             if (right < intervals[i][0]){
                 vector<int> temp;
                 temp.push_back(left);
                 temp.push_back(right);
                 answer.push_back(temp);
                 for (int j = i; j < intervals.size(); j++){
                     answer.push_back(intervals[j]);
                 }
                 return answer;
             } else if (left > intervals[i][1]){
                 answer.push_back(intervals[i]);
             } else {
                 left = min (left, intervals[i][0]);
                 right = max (right, intervals[i][1]);
             }
         }
         vector<int> temp;
         temp.push_back(left);
         temp.push_back(right);
         answer.push_back(temp);
         return answer;
    }
};

//Runtime 7ms Beats 99.40% of users with C++
//Memory 16.98mb Beats 81.26% of users with C++
